# Generated from C:/Users/oscar/Documents/GitHub/circuitsat\CircuitSAT.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,7,232,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
        7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,143,8,0,1,1,1,1,
        1,1,1,1,1,2,1,2,5,2,151,8,2,10,2,12,2,154,9,2,1,3,1,3,5,3,158,8,
        3,10,3,12,3,161,9,3,1,4,1,4,5,4,165,8,4,10,4,12,4,168,9,4,1,4,1,
        4,1,5,1,5,1,5,1,5,1,6,4,6,177,8,6,11,6,12,6,178,1,7,1,7,1,8,1,8,
        1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,
        15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,
        22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,
        28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,0,0,33,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,
        0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,
        0,61,0,63,0,65,0,1,0,31,3,0,48,57,65,90,97,122,5,0,46,46,48,57,64,
        90,95,95,97,122,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,2,0,65,65,
        97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,
        101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,
        0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,
        108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,
        80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,
        2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,
        119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,224,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,1,142,1,0,0,0,3,144,1,0,0,0,5,148,1,0,0,0,7,
        155,1,0,0,0,9,162,1,0,0,0,11,171,1,0,0,0,13,176,1,0,0,0,15,180,1,
        0,0,0,17,182,1,0,0,0,19,184,1,0,0,0,21,186,1,0,0,0,23,188,1,0,0,
        0,25,190,1,0,0,0,27,192,1,0,0,0,29,194,1,0,0,0,31,196,1,0,0,0,33,
        198,1,0,0,0,35,200,1,0,0,0,37,202,1,0,0,0,39,204,1,0,0,0,41,206,
        1,0,0,0,43,208,1,0,0,0,45,210,1,0,0,0,47,212,1,0,0,0,49,214,1,0,
        0,0,51,216,1,0,0,0,53,218,1,0,0,0,55,220,1,0,0,0,57,222,1,0,0,0,
        59,224,1,0,0,0,61,226,1,0,0,0,63,228,1,0,0,0,65,230,1,0,0,0,67,68,
        3,41,20,0,68,69,3,23,11,0,69,70,3,59,29,0,70,143,1,0,0,0,71,72,3,
        41,20,0,72,73,3,43,21,0,73,74,3,53,26,0,74,143,1,0,0,0,75,76,3,15,
        7,0,76,77,3,41,20,0,77,78,3,21,10,0,78,143,1,0,0,0,79,80,3,43,21,
        0,80,81,3,49,24,0,81,143,1,0,0,0,82,83,3,41,20,0,83,84,3,15,7,0,
        84,85,3,41,20,0,85,86,3,21,10,0,86,143,1,0,0,0,87,88,3,41,20,0,88,
        89,3,43,21,0,89,90,3,49,24,0,90,143,1,0,0,0,91,92,3,61,30,0,92,93,
        3,43,21,0,93,94,3,49,24,0,94,143,1,0,0,0,95,96,3,23,11,0,96,97,3,
        47,23,0,97,98,3,55,27,0,98,143,1,0,0,0,99,100,3,19,9,0,100,101,3,
        43,21,0,101,102,3,45,22,0,102,103,3,63,31,0,103,143,1,0,0,0,104,
        105,3,45,22,0,105,106,3,55,27,0,106,107,3,51,25,0,107,108,3,29,14,
        0,108,143,1,0,0,0,109,110,3,45,22,0,110,111,3,43,21,0,111,112,3,
        45,22,0,112,143,1,0,0,0,113,114,3,53,26,0,114,115,3,49,24,0,115,
        116,3,55,27,0,116,117,3,23,11,0,117,143,1,0,0,0,118,119,3,25,12,
        0,119,120,3,15,7,0,120,121,3,37,18,0,121,122,3,51,25,0,122,123,3,
        23,11,0,123,143,1,0,0,0,124,125,3,51,25,0,125,126,3,23,11,0,126,
        127,3,53,26,0,127,128,5,32,0,0,128,129,3,5,2,0,129,143,1,0,0,0,130,
        131,3,27,13,0,131,132,3,23,11,0,132,133,3,53,26,0,133,134,5,32,0,
        0,134,135,3,5,2,0,135,143,1,0,0,0,136,137,3,19,9,0,137,138,3,55,
        27,0,138,139,3,49,24,0,139,140,5,32,0,0,140,141,3,7,3,0,141,143,
        1,0,0,0,142,67,1,0,0,0,142,71,1,0,0,0,142,75,1,0,0,0,142,79,1,0,
        0,0,142,82,1,0,0,0,142,87,1,0,0,0,142,91,1,0,0,0,142,95,1,0,0,0,
        142,99,1,0,0,0,142,104,1,0,0,0,142,109,1,0,0,0,142,113,1,0,0,0,142,
        118,1,0,0,0,142,124,1,0,0,0,142,130,1,0,0,0,142,136,1,0,0,0,143,
        2,1,0,0,0,144,145,3,23,11,0,145,146,3,41,20,0,146,147,3,21,10,0,
        147,4,1,0,0,0,148,152,7,0,0,0,149,151,7,1,0,0,150,149,1,0,0,0,151,
        154,1,0,0,0,152,150,1,0,0,0,152,153,1,0,0,0,153,6,1,0,0,0,154,152,
        1,0,0,0,155,159,7,2,0,0,156,158,7,2,0,0,157,156,1,0,0,0,158,161,
        1,0,0,0,159,157,1,0,0,0,159,160,1,0,0,0,160,8,1,0,0,0,161,159,1,
        0,0,0,162,166,5,59,0,0,163,165,8,3,0,0,164,163,1,0,0,0,165,168,1,
        0,0,0,166,164,1,0,0,0,166,167,1,0,0,0,167,169,1,0,0,0,168,166,1,
        0,0,0,169,170,6,4,0,0,170,10,1,0,0,0,171,172,7,4,0,0,172,173,1,0,
        0,0,173,174,6,5,0,0,174,12,1,0,0,0,175,177,7,3,0,0,176,175,1,0,0,
        0,177,178,1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,14,1,0,0,0,
        180,181,7,5,0,0,181,16,1,0,0,0,182,183,7,6,0,0,183,18,1,0,0,0,184,
        185,7,7,0,0,185,20,1,0,0,0,186,187,7,8,0,0,187,22,1,0,0,0,188,189,
        7,9,0,0,189,24,1,0,0,0,190,191,7,10,0,0,191,26,1,0,0,0,192,193,7,
        11,0,0,193,28,1,0,0,0,194,195,7,12,0,0,195,30,1,0,0,0,196,197,7,
        13,0,0,197,32,1,0,0,0,198,199,7,14,0,0,199,34,1,0,0,0,200,201,7,
        15,0,0,201,36,1,0,0,0,202,203,7,16,0,0,203,38,1,0,0,0,204,205,7,
        17,0,0,205,40,1,0,0,0,206,207,7,18,0,0,207,42,1,0,0,0,208,209,7,
        19,0,0,209,44,1,0,0,0,210,211,7,20,0,0,211,46,1,0,0,0,212,213,7,
        21,0,0,213,48,1,0,0,0,214,215,7,22,0,0,215,50,1,0,0,0,216,217,7,
        23,0,0,217,52,1,0,0,0,218,219,7,24,0,0,219,54,1,0,0,0,220,221,7,
        25,0,0,221,56,1,0,0,0,222,223,7,26,0,0,223,58,1,0,0,0,224,225,7,
        27,0,0,225,60,1,0,0,0,226,227,7,28,0,0,227,62,1,0,0,0,228,229,7,
        29,0,0,229,64,1,0,0,0,230,231,7,30,0,0,231,66,1,0,0,0,6,0,142,152,
        159,166,178,1,6,0,0
    ]

class CircuitSATLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    OPCODE = 1
    END = 2
    NAME = 3
    NUMBER = 4
    COMMENT = 5
    WS = 6
    EOL = 7

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "OPCODE", "END", "NAME", "NUMBER", "COMMENT", "WS", "EOL" ]

    ruleNames = [ "OPCODE", "END", "NAME", "NUMBER", "COMMENT", "WS", "EOL", 
                  "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                  "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                  "W", "X", "Y", "Z" ]

    grammarFileName = "CircuitSAT.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


